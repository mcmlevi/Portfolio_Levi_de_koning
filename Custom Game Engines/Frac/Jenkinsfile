pipeline {
    agent none
    stages {
        stage('Build') {
            matrix {
                agent any
                axes {
                    axis {
                        name 'PLATFORM'
                        values 'x64', 'NX64'
                    }
                    axis {
                        name 'CONFIG'
                        values 'Debug','Develop','Release'
                    }
                }
                stages {
                    stage('Build') {
                        steps {
							echo "${PLATFORM} - ${CONFIG}"
                            bat '"C:\\Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/amd64/msbuild.exe" FracEngine.sln /t:build /p:Configuration=%CONFIG%;Platform=%PLATFORM%'
                        }
                    }
                }
            }
        }
		stage('static code analysis'){
		agent any
			steps{
				bat 'IF EXIST cppcheck.xml (del cppcheck.xml)'
				bat '"C:\\Program Files/Cppcheck/cppcheck" --xml-version=2 --enable=all --inconclusive --project=FracEngine.cppcheck 2>cppcheck.xml'
				publishCppcheck pattern:'cppcheck.xml'
				bat 'python Externals/cpplint/cpplint.py --recursive --filter=-whitespace FracEngine'
			}
		}
    }
}